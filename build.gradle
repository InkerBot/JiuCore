plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

apply plugin: 'org.spongepowered.mixin'

version = mod_version
group = mod_group_id
archivesBaseName = mod_id

java {
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

repositories {
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url "https://maven.covers1624.net"
        content {
            includeModule "cofh", "RedstoneFlux"
        }
    }
    maven {
        url "https://maven.cleanroommc.com"
        content {
            includeModule "zone.rong", "mixinbooter"
        }
    }
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

mixin {
    add sourceSets.main, "jiucore.mixin.refmap.json"
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly fg.deobf("cofh:RedstoneFlux:1.12-2.1.0.7:universal")
    compileOnly fg.deobf("curse.maven:Hwyla-253449:2568751")
    compileOnly fg.deobf("zone.rong:mixinbooter:4.2")

    compileOnly "org.spongepowered:mixin:0.8.5"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": mod_authors,
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),

                "FMLAT": "jc_at.cfg",
                "FMLCorePluginContainsFMLMod": 'false',
                "ForceLoadAsMod": 'true',
                "FMLCorePlugin": "cat.jiu.core.mixin.Configuration",
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "MixinConfigs": "jiucore.mixin.json"
        ])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['mcmod.info']) {
        expand replaceProperties + [project: project]
    }}